on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout files
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2

      - name: Setup Node and Cache
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type Check
        run: npm run type-check

      - name: Unit Tests
        run: pnpm test-unity

      - name: Create Artifact
        run: pnpm sls package --package dist

      - name: Zip artifact
        run: zip -r dist.zip dist
        
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: serverless-artifact
          path: dist.zip
  
  deploy-development:
    name: deploy
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install all dependencies
        run: pnpm ci

      - name: serverless deploy
        uses: serverless/github-action@v3.1
        with:
          args: deploy --stage dev

  # create-release:
  #   name: Create Release
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: serverless-artifact
  #         path: dist.zip

  #     - name: Create Release Tag
  #       id: create-release-tag
  #       # left pads the run number with zeros to a length of 4; better alphabetical order
  #       run: echo "tag_name=r-$(printf %04d $GITHUB_RUN_NUMBER)" >> $GITHUB_OUTPUT
      
  #     - name: Create Draft Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         tag_name: ${{ steps.create-release-tag.outputs.tag_name }}
  #         name: Release ${{ steps.create-release-tag.outputs.tag_name }}
  #         body: |
  #           ## Info
  #           Commit ${{ github.sha }} was deployed to `staging`. [See code diff](${{ github.event.compare }}).

  #           It was initialized by [${{ github.event.sender.login }}](${{ github.event.sender.html_url }}).

  #           ## How to Promote?
  #           In order to promote this to prod, edit the draft and press **"Publish release"**.
  #         draft: true
  #         files: serverless-artifact